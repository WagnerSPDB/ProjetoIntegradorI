package Telas;

import java.awt.Image;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.io.File;
import java.io.FileInputStream;
import java.io.IOException;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import Classes.Time;
import Classes.TimeDAO;

import javax.imageio.ImageIO;
import javax.swing.DefaultComboBoxModel;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.border.EmptyBorder;
import javax.swing.filechooser.FileNameExtensionFilter;

import Conexao.ModuloConexao;

import javax.swing.JTabbedPane;
import javax.swing.JTextField;
import java.awt.Color;
import java.awt.Cursor;
import javax.swing.SwingConstants;
import javax.swing.border.EtchedBorder;
import java.awt.ComponentOrientation;

public class TelaTime extends JFrame {

	private JPanel contentPane;
	Connection conexao = null;
	PreparedStatement pst = null;
	ResultSet rs = null;
	private JTextField txtNome;
	private JTextField txtAbreviacao;
	private JLabel lblAbreviacao;
	private JButton btnAlterar;
	private JLabel lblFoto;
	private JTextField txtIdDel;
	private JTextField txtNomeAlt;
	private JTextField txtAbreviacaoAlt;
	private JLabel lblFotoAlt;
	private int idUsuario;

	private JLabel lblFotoBuscar;
	private JTextField txtAbreviacaoBuscar;

	private JTextField txtFoto;
	private JTextField txtFotoAlt;
	private JTextField txtId;
	private JTextField txtIdBuscar;

	/**
	 * Launch the application.
	 */

	/**
	 * Create the frame.
	 */
	public TelaTime(int idUsuario) {

		conexao = ModuloConexao.conector();
		setResizable(false);
		setTitle("Sistema de Controle de Times");
		setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
		setBounds(100, 100, 516, 362);
		contentPane = new JPanel();
		contentPane.setBorder(new EmptyBorder(5, 5, 5, 5));

		setContentPane(contentPane);
		contentPane.setLayout(null);

		JTabbedPane aba = new JTabbedPane(JTabbedPane.TOP);
		aba.setBounds(0, 0, 513, 323);
		aba.setBackground(new Color(240, 240, 240));
		JPanel inserir = new JPanel();
		inserir.setBackground(new Color(255, 255, 255));
		JPanel deletar = new JPanel();
		deletar.setBackground(new Color(255, 255, 255));
		JPanel alterar = new JPanel();
		alterar.setBackground(new Color(255, 255, 255));
		aba.addTab("Inserir", inserir);
		inserir.setLayout(null);

		JLabel lblNome = new JLabel("* Nome");
		lblNome.setBounds(24, 56, 56, 14);
		inserir.add(lblNome);

		txtNome = new JTextField();
		txtNome.setColumns(10);
		txtNome.setBounds(108, 53, 142, 20);
		txtNome.setColumns(10);
		inserir.add(txtNome);

		lblAbreviacao = new JLabel("* Abreviação");
		lblAbreviacao.setBounds(24, 116, 76, 14);
		inserir.add(lblAbreviacao);

		txtAbreviacao = new JTextField();
		txtAbreviacao.setBounds(108, 113, 86, 20);
		inserir.add(txtAbreviacao);
		txtAbreviacao.setColumns(10);

		lblFoto = new JLabel("");
		lblFoto.setHorizontalAlignment(SwingConstants.CENTER);
		lblFoto.setIcon(new ImageIcon(TelaTime.class.getResource("/Icones/camera.png")));
		lblFoto.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		lblFoto.setBounds(334, 37, 140, 140);
		inserir.add(lblFoto);

		JButton btnCarregar = new JButton("Carregar foto");
		btnCarregar.setBorder(null);
		btnCarregar.setForeground(new Color(255, 255, 255));
		btnCarregar.setBackground(new Color(51, 153, 0));
		btnCarregar.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		btnCarregar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				carregarFoto();
			}
		});
		btnCarregar.setBounds(351, 188, 105, 31);
		inserir.add(btnCarregar);

		JButton btnTime = new JButton("Inserir");
		btnTime.setBorder(null);
		btnTime.setForeground(new Color(255, 255, 255));
		btnTime.setBackground(new Color(51, 153, 0));
		btnTime.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		btnTime.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtNome.getText().isEmpty() || txtAbreviacao.getText().isEmpty() || txtFoto.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "Preencha todos os campos obrigatórios");
				} else {
					Time time = new Time();
					time.setNome(txtNome.getText());
					time.setAbreviacao(txtAbreviacao.getText());
					time.setFoto(txtFoto.getText());
					time.setIdUsuario(idUsuario);
					TimeDAO chama = new TimeDAO();
					chama.cadastrarTime(time);
				}
				txtNome.setText(null);
				txtAbreviacao.setText(null);
				txtFoto.setText(null);
				lblFoto.setIcon(new ImageIcon(TelaTime.class.getResource("/Icones/camera.png")));
			}
		});
		btnTime.setBounds(199, 253, 111, 31);
		inserir.add(btnTime);

		txtFoto = new JTextField();
		txtFoto.setBounds(361, 234, 96, 19);
		inserir.add(txtFoto);
		txtFoto.setColumns(10);

		JButton btnRemover = new JButton("Remover");
		btnRemover.setBorder(null);
		btnRemover.setForeground(new Color(255, 255, 255));
		btnRemover.setBackground(new Color(51, 153, 0));
		btnRemover.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		btnRemover.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				TimeDAO chama = new TimeDAO();
				int id = Integer.parseInt(txtIdDel.getText());
				chama.removerTime(id);
				txtIdDel.setText(null);
			}
		});
		deletar.setLayout(null);
		btnRemover.setBounds(193, 121, 107, 35);
		deletar.add(btnRemover);

		JLabel lblInsiraONome = new JLabel("Insira o id do time que deseja deletar:");
		lblInsiraONome.setBounds(26, 45, 236, 14);
		deletar.add(lblInsiraONome);

		txtIdDel = new JTextField();
		txtIdDel.setBounds(304, 42, 144, 20);
		deletar.add(txtIdDel);
		txtIdDel.setColumns(10);

		JButton btnCarregarAlt = new JButton("Carregar foto");
		btnCarregarAlt.setBorder(null);
		btnCarregarAlt.setForeground(new Color(255, 255, 255));
		btnCarregarAlt.setBackground(new Color(51, 153, 0));
		btnCarregarAlt.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		btnCarregarAlt.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				carregarFotoAlt();
			}
		});
		btnCarregarAlt.setBounds(329, 176, 102, 31);
		alterar.add(btnCarregarAlt);

		aba.addTab("Alterar", alterar);
		btnAlterar = new JButton("Alterar");
		btnAlterar.setBorder(null);
		btnAlterar.setForeground(new Color(255, 255, 255));
		btnAlterar.setBackground(new Color(51, 153, 0));
		btnAlterar.setCursor(Cursor.getPredefinedCursor(Cursor.DEFAULT_CURSOR));
		btnAlterar.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (txtNomeAlt.getText().isEmpty() || txtAbreviacaoAlt.getText().isEmpty()
						|| txtFotoAlt.getText().isEmpty()) {
					JOptionPane.showMessageDialog(null, "Preencha todos os campos obrigatórios");
				} else {
					Time time = new Time();
					time.setNome(txtNomeAlt.getText());
					time.setAbreviacao(txtAbreviacaoAlt.getText());
					time.setFoto(txtFotoAlt.getText());
					time.setIdTime(Integer.parseInt(txtId.getText()));
					time.setIdUsuario(idUsuario);
					TimeDAO chama = new TimeDAO();
					chama.alterarTime(time);
				}
				txtNomeAlt.setText(null);
				txtAbreviacaoAlt.setText(null);
				txtFotoAlt.setText(null);
				lblFotoAlt.setIcon(new ImageIcon(TelaTime.class.getResource("/Icones/camera.png")));
			}
		});
		alterar.setLayout(null);
		btnAlterar.setBounds(205, 253, 96, 31);
		alterar.add(btnAlterar);
		aba.addTab("Remover", deletar);

		JLabel lblNomeAlt = new JLabel("Nome:");
		lblNomeAlt.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
		lblNomeAlt.setBounds(20, 67, 83, 14);
		alterar.add(lblNomeAlt);

		txtNomeAlt = new JTextField();
		txtNomeAlt.setBounds(20, 91, 183, 20);
		alterar.add(txtNomeAlt);
		txtNomeAlt.setColumns(10);

		JLabel lblAbreviacaoAlt = new JLabel("Abreviação:");
		lblAbreviacaoAlt.setBounds(20, 121, 83, 14);
		alterar.add(lblAbreviacaoAlt);

		txtAbreviacaoAlt = new JTextField();
		txtAbreviacaoAlt.setBounds(20, 145, 86, 20);
		alterar.add(txtAbreviacaoAlt);
		txtAbreviacaoAlt.setColumns(10);

		lblFotoAlt = new JLabel("");
		lblFotoAlt.setHorizontalAlignment(SwingConstants.CENTER);
		lblFotoAlt.setIcon(new ImageIcon(TelaTime.class.getResource("/Icones/camera.png")));
		lblFotoAlt.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		lblFotoAlt.setBounds(309, 25, 140, 140);
		alterar.add(lblFotoAlt);

		txtFotoAlt = new JTextField();
		txtFotoAlt.setBounds(339, 217, 96, 19);
		alterar.add(txtFotoAlt);
		txtFotoAlt.setColumns(10);
		
		JLabel lblId = new JLabel("Digite o ID:");
		lblId.setComponentOrientation(ComponentOrientation.LEFT_TO_RIGHT);
		lblId.setBounds(20, 10, 83, 14);
		alterar.add(lblId);
		
		txtId = new JTextField();
		txtId.setColumns(10);
		txtId.setBounds(20, 34, 83, 20);
		alterar.add(txtId);

		JPanel buscar = new JPanel();
		buscar.setBorder(null);
		buscar.setBackground(new Color(255, 255, 255));
		aba.addTab("Buscar", buscar);
		buscar.setLayout(null);
		
		txtIdBuscar = new JTextField();
		txtIdBuscar.setBounds(48, 178, 96, 19);
		buscar.add(txtIdBuscar);
		txtIdBuscar.setColumns(10);
		
		txtAbreviacaoBuscar = new JTextField();
		txtAbreviacaoBuscar.setBounds(176, 178, 96, 19);
		buscar.add(txtAbreviacaoBuscar);
		txtAbreviacaoBuscar.setColumns(10);

		lblFotoBuscar = new JLabel("");
		lblFotoBuscar.setHorizontalAlignment(SwingConstants.CENTER);
		lblFotoBuscar.setHorizontalTextPosition(SwingConstants.CENTER);
		lblFotoBuscar.setIcon(new ImageIcon(TelaTime.class.getResource("/Icones/camera.png")));
		lblFotoBuscar.setBorder(new EtchedBorder(EtchedBorder.LOWERED, null, null));
		lblFotoBuscar.setBounds(314, 68, 140, 140);
		buscar.add(lblFotoBuscar);

		JComboBox<Time> cbxTime = new JComboBox<>();
		cbxTime.setModel(new DefaultComboBoxModel(new String[] { "Selecione" }));
		cbxTime.addActionListener(new ActionListener() {
			public void actionPerformed(ActionEvent e) {
				if (cbxTime.getSelectedItem() == "Selecione") {
					txtAbreviacaoBuscar.setText(null);
					lblFotoBuscar.setIcon(null);
					txtIdBuscar.setText(null);
				} else {
					Time cbx = (Time) cbxTime.getSelectedItem();
					recuperarTime(cbx);
				}
			}
		});
		cbxTime.setBounds(48, 68, 108, 21);
		buscar.add(cbxTime);

		try {
			String sql = "select * from time where id_usuario = ?";
			pst = conexao.prepareStatement(sql);
			pst.setInt(1, 1);
			rs = pst.executeQuery();
			List<Time> lista = new ArrayList<>();

			while (rs.next()) {
				Time time = new Time();
				time.setIdTime(rs.getInt("id"));
				time.setNome(rs.getString("nome"));
				time.setAbreviacao(rs.getString("abreviacao"));
				time.setIdUsuario(rs.getInt("id_usuario"));

				// Criar um objeto com os valores recuperados

				// Adicionar o objeto à lista
				lista.add(time);
			}
			for (Time time : lista) {
				cbxTime.addItem(time);
			}
		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, e);
		}

		JLabel lblBuscarNome = new JLabel("Insira o time que deseja buscar:");
		lblBuscarNome.setBounds(22, 43, 302, 14);
		buscar.add(lblBuscarNome);
		buscar.setLayout(null);

		JLabel lblAbreviacaoBuscar = new JLabel("Abreviação:");
		lblAbreviacaoBuscar.setHorizontalAlignment(SwingConstants.CENTER);
		lblAbreviacaoBuscar.setBounds(176, 149, 96, 14);
		buscar.add(lblAbreviacaoBuscar);
		
		JLabel lblIdBuscar = new JLabel("Id:");
		lblIdBuscar.setHorizontalAlignment(SwingConstants.CENTER);
		lblIdBuscar.setBounds(48, 149, 96, 14);
		buscar.add(lblIdBuscar);
		
		
		contentPane.add(aba);
	}

	//public TelaTime() {}
	private void carregarFoto() {
		JFileChooser arquivo = new JFileChooser();
		arquivo.setDialogTitle("SELECIONE UMA IMAGEM");
		arquivo.setFileFilter(
				new FileNameExtensionFilter("Arquivo de imagens(*.PNG, *.JPG, *.JPEG)", "png", "jpg", "jpeg"));
		// a linha abaixo seleciona apenas uma imagem
		arquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int op = arquivo.showOpenDialog(null);
		if (op == JFileChooser.APPROVE_OPTION) {
			File selectedFile = arquivo.getSelectedFile();
			txtFoto.setText(selectedFile.getAbsolutePath());
			ImageIcon imageIcon = new ImageIcon(selectedFile.getAbsolutePath());
			Image image = imageIcon.getImage().getScaledInstance(155, 135, Image.SCALE_DEFAULT);
			imageIcon = new ImageIcon(image);
			lblFoto.setIcon(imageIcon);
		} else if (op == JFileChooser.CANCEL_OPTION) {
			System.out.println("No Data");
		}
	}

	private void carregarFotoAlt() {
		JFileChooser arquivo = new JFileChooser();
		arquivo.setDialogTitle("SELECIONE UMA IMAGEM");
		arquivo.setFileFilter(
				new FileNameExtensionFilter("Arquivo de imagens(*.PNG, *.JPG, *.JPEG)", "png", "jpg", "jpeg"));
		// a linha abaixo seleciona apenas uma imagem
		arquivo.setFileSelectionMode(JFileChooser.FILES_ONLY);
		int op = arquivo.showOpenDialog(null);
		if (op == JFileChooser.APPROVE_OPTION) {
			File selectedFile = arquivo.getSelectedFile();
			txtFotoAlt.setText(selectedFile.getAbsolutePath());
			ImageIcon imageIcon = new ImageIcon(selectedFile.getAbsolutePath());
			Image image = imageIcon.getImage().getScaledInstance(155, 135, Image.SCALE_DEFAULT);
			imageIcon = new ImageIcon(image);
			lblFotoAlt.setIcon(imageIcon);
		} else if (op == JFileChooser.CANCEL_OPTION) {
			System.out.println("No Data");
		}
	}

	public void recuperarTime(Time time) {
					
		conexao = ModuloConexao.conector();
		try {
			String sql = "select * from time where nome=?";
			pst = conexao.prepareStatement(sql);
			pst.setString(1, time.getNome());
			rs = pst.executeQuery();
			if (rs.next()) {
				String id = Integer.toString(rs.getInt(1));
				txtIdBuscar.setText(id);
				txtAbreviacaoBuscar.setText(rs.getString(3));
				Image imagem = null;
				try {
					imagem = ImageIO.read(new File(rs.getString(4)));
				} catch (IOException e) {
					// TODO Auto-generated catch block
					e.printStackTrace();
				}
                // Redimensiona a imagem para se ajustar ao tamanho desejado
                Image imagemRedimensionada = imagem.getScaledInstance(140, 140, Image.SCALE_SMOOTH);
				lblFotoBuscar.setIcon(new ImageIcon(imagemRedimensionada));
			} else {
				JOptionPane.showMessageDialog(null, "Time não cadastrado");
			}

		} catch (SQLException e) {
			JOptionPane.showMessageDialog(null, e);
		}
	}
	
	public static void main(String[] args) {
		int id = 0;
		TelaTime frame = new TelaTime(id);
		frame.setVisible(true);
	}
	

}
